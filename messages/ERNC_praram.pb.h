/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_ERNC_PRARAM_PB_H_INCLUDED
#define PB_ERNC_PRARAM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* 1. 功能类型枚举（请求/响应） */
typedef enum _FunCode {
    FunCode_FUN_REQUEST = 0,
    FunCode_FUN_RESPONSE = 1
} FunCode;

/* 9. 消息ID枚举 */
typedef enum _ProtoID {
    ProtoID_MSG_CHANNEL_NUMBER = 0,
    ProtoID_MSG_CHANNEL_AMPLITUDE = 25,
    ProtoID_MSG_CHANNEL_SWITCH = 119,
    ProtoID_MSG_CHECK_MOD = 150,
    ProtoID_MSG_ANC_SWITCH = 151,
    ProtoID_MSG_VEHICLE_STATE = 138,
    ProtoID_MSG_TRAN_FUNC_FLAG = 153,
    ProtoID_MSG_TRAN_FUNC_STATE = 154,
    ProtoID_MSG_FILTER_RANGES = 155,
    ProtoID_MSG_SYSTEM_RANGES = 157,
    ProtoID_MSG_ORDER_FLAG = 77,
    ProtoID_MSG_ORDER2_PARAMS = 78,
    ProtoID_MSG_ORDER4_PARAMS = 86,
    ProtoID_MSG_ORDER6_PARAMS = 87,
    ProtoID_MSG_ALPHA_PARAMS = 158,
    ProtoID_MSG_FREQ_DIVISION = 27,
    ProtoID_MSG_THRESHOLDS = 33,
    ProtoID_MSG_GRAPH_DATA = 156
} ProtoID;

/* Struct definitions */
/* 2. 实时数据流相关
 通道数量（acc/mic/spk） */
typedef struct _MSG_ChannelNumber {
    uint32_t ReferNum; /* acc通道数 */
    uint32_t ErrNum; /* mic通道数 */
    uint32_t SpkNum; /* spk通道数 */
} MSG_ChannelNumber;

/* 通道幅值（mic/acc/spk） */
typedef struct _MSG_ChannelAmplitude {
    uint32_t InputAmplitude[13]; /* mic/acc幅值 */
    uint32_t OutputAmplitude; /* spk幅值 */
} MSG_ChannelAmplitude;

/* 通道开关（ACC/MIC/SPK） */
typedef struct _MSG_ChannelSwitch {
    uint32_t FInputPoi[20]; /* ACC/MIC开关 */
    uint32_t FOutputPoi[8]; /* SPK开关 */
} MSG_ChannelSwitch;

/* 读取实时数据流（1：start，3：end） */
typedef struct _MSG_CheckMod {
    uint32_t check_mod;
} MSG_CheckMod;

/* 3. 车辆CAN信息相关消息
 ANC/ENC/RNC开关状态 */
typedef struct _MSG_AncSwitch {
    bool anc_off; /* ANC关闭（true=关闭，false=开启） */
    bool enc_off; /* ENC关闭（true=关闭，false=开启） */
    bool rnc_off; /* RNC关闭（true=关闭，false=开启） */
} MSG_AncSwitch;

/* 车辆状态（车速/转速/空调等） */
typedef struct _MSG_VehicleState {
    uint32_t speed; /* 车速 */
    uint32_t EngineSpeed; /* 发动机转速 */
    uint32_t AC; /* 空调状态 */
    uint32_t gear; /* 挡位 */
    uint32_t drive_mod; /* 驾驶模式 */
    uint32_t door[5]; /* 车门状态（5个车门，0=关，1=开） */
    uint32_t window[4]; /* 车窗状态（4个车窗，0=关，1=开） */
    uint32_t media[8]; /* 媒体状态（8个参数，自定义含义） */
} MSG_VehicleState;

/* 4. 传函标定相关消息
 传函功能标志（采集/控制） */
typedef struct _MSG_TranFuncFlag {
    bool value; /* 0=采集传函，1=控制程序 */
} MSG_TranFuncFlag;

/* 传函标定状态 */
typedef struct _MSG_TranFuncState {
    uint32_t value; /* 标定状态） */
} MSG_TranFuncState;

/* 滤波器范围配置 */
typedef struct _MSG_FilterRanges {
    uint32_t input_filter[10]; /* 滤波器输入范围（10个参数） */
    uint32_t output_filter[10]; /* 滤波器输出范围（10个参数） */
} MSG_FilterRanges;

/* 5. 系统配置相关消息
 系统阈值配置（RNC/ENC） */
typedef struct _MSG_SystemRanges {
    uint32_t rnc_system_threshold[18]; /* RNC系统阈值（18个参数） */
    uint32_t enc_system_threshold[18]; /* ENC系统阈值（18个参数） */
} MSG_SystemRanges;

/* 6. ENC标定相关消息
 阶次标志开关 */
typedef struct _MSG_OrderFlag {
    bool order2;
    bool order4;
    bool order6;
} MSG_OrderFlag;

/* 2阶参数集 */
typedef struct _MSG_Order2Params {
    uint32_t tach_of_amp1[9];
    uint32_t amp1[10];
    uint32_t tach_of_step1[9];
    uint32_t step1[10];
    uint32_t leaky1[10];
    uint32_t err_wei1; /* 2阶误差权重 */
    uint32_t delta1; /* 2阶增量 */
} MSG_Order2Params;

/* 4阶参数集 */
typedef struct _MSG_Order4Params {
    uint32_t tach_of_amp2[9];
    uint32_t amp2[10];
    uint32_t tach_of_step2[9];
    uint32_t step2[10];
    uint32_t leaky2[10];
    uint32_t err_wei2;
    uint32_t delta2;
} MSG_Order4Params;

/* 6阶参数集 */
typedef struct _MSG_Order6Params {
    uint32_t tach_of_amp3[9];
    uint32_t amp3[10];
    uint32_t tach_of_step3[9];
    uint32_t step3[10];
    uint32_t leaky3[10];
    uint32_t err_wei3;
    uint32_t delta3;
} MSG_Order6Params;

/* 7. RNC标定相关消息
 RNC步长参数 */
typedef struct _MSG_AlphaParams {
    uint32_t alpha1;
    uint32_t alpha2;
    uint32_t alpha3;
    uint32_t alpha4;
    uint32_t alpha5;
    uint32_t alpha1_10;
    uint32_t alpha2_10;
    uint32_t alpha3_10;
    uint32_t alpha4_10;
    uint32_t alpha5_10;
} MSG_AlphaParams;

/* RNC分频参数 */
typedef struct _MSG_FreqDivision {
    uint32_t fstart_fre_num;
    uint32_t ffirst_fre_num;
    uint32_t fsecond_fre_num;
    uint32_t fthird_fre_num;
    uint32_t fforth_fre_num;
} MSG_FreqDivision;

/* RNC阈值参数 */
typedef struct _MSG_Thresholds {
    uint32_t input_threshold;
    uint32_t DivThreshold;
    uint32_t horn_power;
} MSG_Thresholds;

typedef struct _MsgRequestResponse {
    ProtoID protoID;
    FunCode funCode;
    pb_size_t which_payload;
    union _MsgRequestResponse_payload {
        MSG_ChannelNumber msg_channel_number;
        MSG_ChannelAmplitude msg_channel_amplitude;
        MSG_ChannelSwitch msg_channel_switch;
        MSG_CheckMod msg_check_mod;
        MSG_AncSwitch msg_anc_switch;
        MSG_VehicleState msg_vehicle_state;
        MSG_TranFuncFlag msg_tran_func_flag;
        MSG_TranFuncState msg_tran_func_state;
        MSG_FilterRanges msg_filter_ranges;
        MSG_SystemRanges msg_system_ranges;
        MSG_OrderFlag msg_order_flag;
        MSG_Order2Params msg_order2_params;
        MSG_Order4Params msg_order4_params;
        MSG_Order6Params msg_order6_params;
        MSG_AlphaParams msg_alpha_params;
        MSG_FreqDivision msg_freq_division;
        MSG_Thresholds msg_thresholds;
    } payload;
} MsgRequestResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _FunCode_MIN FunCode_FUN_REQUEST
#define _FunCode_MAX FunCode_FUN_RESPONSE
#define _FunCode_ARRAYSIZE ((FunCode)(FunCode_FUN_RESPONSE+1))

#define _ProtoID_MIN ProtoID_MSG_CHANNEL_NUMBER
#define _ProtoID_MAX ProtoID_MSG_ALPHA_PARAMS
#define _ProtoID_ARRAYSIZE ((ProtoID)(ProtoID_MSG_ALPHA_PARAMS+1))


















#define MsgRequestResponse_protoID_ENUMTYPE ProtoID
#define MsgRequestResponse_funCode_ENUMTYPE FunCode


/* Initializer values for message structs */
#define MSG_ChannelNumber_init_default           {0, 0, 0}
#define MSG_ChannelAmplitude_init_default        {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define MSG_ChannelSwitch_init_default           {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_CheckMod_init_default                {0}
#define MSG_AncSwitch_init_default               {0, 0, 0}
#define MSG_VehicleState_init_default            {0, 0, 0, 0, 0, {0, 0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_TranFuncFlag_init_default            {0}
#define MSG_TranFuncState_init_default           {0}
#define MSG_FilterRanges_init_default            {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_SystemRanges_init_default            {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_OrderFlag_init_default               {0, 0, 0}
#define MSG_Order2Params_init_default            {{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define MSG_Order4Params_init_default            {{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define MSG_Order6Params_init_default            {{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define MSG_AlphaParams_init_default             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define MSG_FreqDivision_init_default            {0, 0, 0, 0, 0}
#define MSG_Thresholds_init_default              {0, 0, 0}
#define MsgRequestResponse_init_default          {_ProtoID_MIN, _FunCode_MIN, 0, {MSG_ChannelNumber_init_default}}
#define MSG_ChannelNumber_init_zero              {0, 0, 0}
#define MSG_ChannelAmplitude_init_zero           {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define MSG_ChannelSwitch_init_zero              {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_CheckMod_init_zero                   {0}
#define MSG_AncSwitch_init_zero                  {0, 0, 0}
#define MSG_VehicleState_init_zero               {0, 0, 0, 0, 0, {0, 0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_TranFuncFlag_init_zero               {0}
#define MSG_TranFuncState_init_zero              {0}
#define MSG_FilterRanges_init_zero               {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_SystemRanges_init_zero               {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MSG_OrderFlag_init_zero                  {0, 0, 0}
#define MSG_Order2Params_init_zero               {{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define MSG_Order4Params_init_zero               {{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define MSG_Order6Params_init_zero               {{0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define MSG_AlphaParams_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define MSG_FreqDivision_init_zero               {0, 0, 0, 0, 0}
#define MSG_Thresholds_init_zero                 {0, 0, 0}
#define MsgRequestResponse_init_zero             {_ProtoID_MIN, _FunCode_MIN, 0, {MSG_ChannelNumber_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MSG_ChannelNumber_ReferNum_tag           1
#define MSG_ChannelNumber_ErrNum_tag             2
#define MSG_ChannelNumber_SpkNum_tag             3
#define MSG_ChannelAmplitude_InputAmplitude_tag  1
#define MSG_ChannelAmplitude_OutputAmplitude_tag 2
#define MSG_ChannelSwitch_FInputPoi_tag          1
#define MSG_ChannelSwitch_FOutputPoi_tag         2
#define MSG_CheckMod_check_mod_tag               1
#define MSG_AncSwitch_anc_off_tag                1
#define MSG_AncSwitch_enc_off_tag                2
#define MSG_AncSwitch_rnc_off_tag                3
#define MSG_VehicleState_speed_tag               1
#define MSG_VehicleState_EngineSpeed_tag         2
#define MSG_VehicleState_AC_tag                  3
#define MSG_VehicleState_gear_tag                4
#define MSG_VehicleState_drive_mod_tag           5
#define MSG_VehicleState_door_tag                6
#define MSG_VehicleState_window_tag              7
#define MSG_VehicleState_media_tag               8
#define MSG_TranFuncFlag_value_tag               1
#define MSG_TranFuncState_value_tag              1
#define MSG_FilterRanges_input_filter_tag        1
#define MSG_FilterRanges_output_filter_tag       2
#define MSG_SystemRanges_rnc_system_threshold_tag 1
#define MSG_SystemRanges_enc_system_threshold_tag 2
#define MSG_OrderFlag_order2_tag                 1
#define MSG_OrderFlag_order4_tag                 2
#define MSG_OrderFlag_order6_tag                 3
#define MSG_Order2Params_tach_of_amp1_tag        1
#define MSG_Order2Params_amp1_tag                2
#define MSG_Order2Params_tach_of_step1_tag       3
#define MSG_Order2Params_step1_tag               4
#define MSG_Order2Params_leaky1_tag              5
#define MSG_Order2Params_err_wei1_tag            6
#define MSG_Order2Params_delta1_tag              7
#define MSG_Order4Params_tach_of_amp2_tag        1
#define MSG_Order4Params_amp2_tag                2
#define MSG_Order4Params_tach_of_step2_tag       3
#define MSG_Order4Params_step2_tag               4
#define MSG_Order4Params_leaky2_tag              5
#define MSG_Order4Params_err_wei2_tag            6
#define MSG_Order4Params_delta2_tag              7
#define MSG_Order6Params_tach_of_amp3_tag        1
#define MSG_Order6Params_amp3_tag                2
#define MSG_Order6Params_tach_of_step3_tag       3
#define MSG_Order6Params_step3_tag               4
#define MSG_Order6Params_leaky3_tag              5
#define MSG_Order6Params_err_wei3_tag            6
#define MSG_Order6Params_delta3_tag              7
#define MSG_AlphaParams_alpha1_tag               1
#define MSG_AlphaParams_alpha2_tag               2
#define MSG_AlphaParams_alpha3_tag               3
#define MSG_AlphaParams_alpha4_tag               4
#define MSG_AlphaParams_alpha5_tag               5
#define MSG_AlphaParams_alpha1_10_tag            6
#define MSG_AlphaParams_alpha2_10_tag            7
#define MSG_AlphaParams_alpha3_10_tag            8
#define MSG_AlphaParams_alpha4_10_tag            9
#define MSG_AlphaParams_alpha5_10_tag            10
#define MSG_FreqDivision_fstart_fre_num_tag      1
#define MSG_FreqDivision_ffirst_fre_num_tag      2
#define MSG_FreqDivision_fsecond_fre_num_tag     3
#define MSG_FreqDivision_fthird_fre_num_tag      4
#define MSG_FreqDivision_fforth_fre_num_tag      5
#define MSG_Thresholds_input_threshold_tag       1
#define MSG_Thresholds_DivThreshold_tag          2
#define MSG_Thresholds_horn_power_tag            3
#define MsgRequestResponse_protoID_tag           1
#define MsgRequestResponse_funCode_tag           2
#define MsgRequestResponse_msg_channel_number_tag 3
#define MsgRequestResponse_msg_channel_amplitude_tag 4
#define MsgRequestResponse_msg_channel_switch_tag 5
#define MsgRequestResponse_msg_check_mod_tag     6
#define MsgRequestResponse_msg_anc_switch_tag    7
#define MsgRequestResponse_msg_vehicle_state_tag 8
#define MsgRequestResponse_msg_tran_func_flag_tag 9
#define MsgRequestResponse_msg_tran_func_state_tag 10
#define MsgRequestResponse_msg_filter_ranges_tag 11
#define MsgRequestResponse_msg_system_ranges_tag 12
#define MsgRequestResponse_msg_order_flag_tag    13
#define MsgRequestResponse_msg_order2_params_tag 14
#define MsgRequestResponse_msg_order4_params_tag 15
#define MsgRequestResponse_msg_order6_params_tag 16
#define MsgRequestResponse_msg_alpha_params_tag  17
#define MsgRequestResponse_msg_freq_division_tag 18
#define MsgRequestResponse_msg_thresholds_tag    19

/* Struct field encoding specification for nanopb */
#define MSG_ChannelNumber_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ReferNum,          1) \
X(a, STATIC,   SINGULAR, UINT32,   ErrNum,            2) \
X(a, STATIC,   SINGULAR, UINT32,   SpkNum,            3)
#define MSG_ChannelNumber_CALLBACK NULL
#define MSG_ChannelNumber_DEFAULT NULL

#define MSG_ChannelAmplitude_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   InputAmplitude,    1) \
X(a, STATIC,   SINGULAR, UINT32,   OutputAmplitude,   2)
#define MSG_ChannelAmplitude_CALLBACK NULL
#define MSG_ChannelAmplitude_DEFAULT NULL

#define MSG_ChannelSwitch_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   FInputPoi,         1) \
X(a, STATIC,   FIXARRAY, UINT32,   FOutputPoi,        2)
#define MSG_ChannelSwitch_CALLBACK NULL
#define MSG_ChannelSwitch_DEFAULT NULL

#define MSG_CheckMod_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   check_mod,         1)
#define MSG_CheckMod_CALLBACK NULL
#define MSG_CheckMod_DEFAULT NULL

#define MSG_AncSwitch_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     anc_off,           1) \
X(a, STATIC,   SINGULAR, BOOL,     enc_off,           2) \
X(a, STATIC,   SINGULAR, BOOL,     rnc_off,           3)
#define MSG_AncSwitch_CALLBACK NULL
#define MSG_AncSwitch_DEFAULT NULL

#define MSG_VehicleState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   speed,             1) \
X(a, STATIC,   SINGULAR, UINT32,   EngineSpeed,       2) \
X(a, STATIC,   SINGULAR, UINT32,   AC,                3) \
X(a, STATIC,   SINGULAR, UINT32,   gear,              4) \
X(a, STATIC,   SINGULAR, UINT32,   drive_mod,         5) \
X(a, STATIC,   FIXARRAY, UINT32,   door,              6) \
X(a, STATIC,   FIXARRAY, UINT32,   window,            7) \
X(a, STATIC,   FIXARRAY, UINT32,   media,             8)
#define MSG_VehicleState_CALLBACK NULL
#define MSG_VehicleState_DEFAULT NULL

#define MSG_TranFuncFlag_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     value,             1)
#define MSG_TranFuncFlag_CALLBACK NULL
#define MSG_TranFuncFlag_DEFAULT NULL

#define MSG_TranFuncState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   value,             1)
#define MSG_TranFuncState_CALLBACK NULL
#define MSG_TranFuncState_DEFAULT NULL

#define MSG_FilterRanges_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   input_filter,      1) \
X(a, STATIC,   FIXARRAY, UINT32,   output_filter,     2)
#define MSG_FilterRanges_CALLBACK NULL
#define MSG_FilterRanges_DEFAULT NULL

#define MSG_SystemRanges_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   rnc_system_threshold,   1) \
X(a, STATIC,   FIXARRAY, UINT32,   enc_system_threshold,   2)
#define MSG_SystemRanges_CALLBACK NULL
#define MSG_SystemRanges_DEFAULT NULL

#define MSG_OrderFlag_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     order2,            1) \
X(a, STATIC,   SINGULAR, BOOL,     order4,            2) \
X(a, STATIC,   SINGULAR, BOOL,     order6,            3)
#define MSG_OrderFlag_CALLBACK NULL
#define MSG_OrderFlag_DEFAULT NULL

#define MSG_Order2Params_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   tach_of_amp1,      1) \
X(a, STATIC,   FIXARRAY, UINT32,   amp1,              2) \
X(a, STATIC,   FIXARRAY, UINT32,   tach_of_step1,     3) \
X(a, STATIC,   FIXARRAY, UINT32,   step1,             4) \
X(a, STATIC,   FIXARRAY, UINT32,   leaky1,            5) \
X(a, STATIC,   SINGULAR, UINT32,   err_wei1,          6) \
X(a, STATIC,   SINGULAR, UINT32,   delta1,            7)
#define MSG_Order2Params_CALLBACK NULL
#define MSG_Order2Params_DEFAULT NULL

#define MSG_Order4Params_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   tach_of_amp2,      1) \
X(a, STATIC,   FIXARRAY, UINT32,   amp2,              2) \
X(a, STATIC,   FIXARRAY, UINT32,   tach_of_step2,     3) \
X(a, STATIC,   FIXARRAY, UINT32,   step2,             4) \
X(a, STATIC,   FIXARRAY, UINT32,   leaky2,            5) \
X(a, STATIC,   SINGULAR, UINT32,   err_wei2,          6) \
X(a, STATIC,   SINGULAR, UINT32,   delta2,            7)
#define MSG_Order4Params_CALLBACK NULL
#define MSG_Order4Params_DEFAULT NULL

#define MSG_Order6Params_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   tach_of_amp3,      1) \
X(a, STATIC,   FIXARRAY, UINT32,   amp3,              2) \
X(a, STATIC,   FIXARRAY, UINT32,   tach_of_step3,     3) \
X(a, STATIC,   FIXARRAY, UINT32,   step3,             4) \
X(a, STATIC,   FIXARRAY, UINT32,   leaky3,            5) \
X(a, STATIC,   SINGULAR, UINT32,   err_wei3,          6) \
X(a, STATIC,   SINGULAR, UINT32,   delta3,            7)
#define MSG_Order6Params_CALLBACK NULL
#define MSG_Order6Params_DEFAULT NULL

#define MSG_AlphaParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   alpha1,            1) \
X(a, STATIC,   SINGULAR, UINT32,   alpha2,            2) \
X(a, STATIC,   SINGULAR, UINT32,   alpha3,            3) \
X(a, STATIC,   SINGULAR, UINT32,   alpha4,            4) \
X(a, STATIC,   SINGULAR, UINT32,   alpha5,            5) \
X(a, STATIC,   SINGULAR, UINT32,   alpha1_10,         6) \
X(a, STATIC,   SINGULAR, UINT32,   alpha2_10,         7) \
X(a, STATIC,   SINGULAR, UINT32,   alpha3_10,         8) \
X(a, STATIC,   SINGULAR, UINT32,   alpha4_10,         9) \
X(a, STATIC,   SINGULAR, UINT32,   alpha5_10,        10)
#define MSG_AlphaParams_CALLBACK NULL
#define MSG_AlphaParams_DEFAULT NULL

#define MSG_FreqDivision_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   fstart_fre_num,    1) \
X(a, STATIC,   SINGULAR, UINT32,   ffirst_fre_num,    2) \
X(a, STATIC,   SINGULAR, UINT32,   fsecond_fre_num,   3) \
X(a, STATIC,   SINGULAR, UINT32,   fthird_fre_num,    4) \
X(a, STATIC,   SINGULAR, UINT32,   fforth_fre_num,    5)
#define MSG_FreqDivision_CALLBACK NULL
#define MSG_FreqDivision_DEFAULT NULL

#define MSG_Thresholds_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   input_threshold,   1) \
X(a, STATIC,   SINGULAR, UINT32,   DivThreshold,      2) \
X(a, STATIC,   SINGULAR, UINT32,   horn_power,        3)
#define MSG_Thresholds_CALLBACK NULL
#define MSG_Thresholds_DEFAULT NULL

#define MsgRequestResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    protoID,           1) \
X(a, STATIC,   SINGULAR, UENUM,    funCode,           2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_channel_number,payload.msg_channel_number),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_channel_amplitude,payload.msg_channel_amplitude),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_channel_switch,payload.msg_channel_switch),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_check_mod,payload.msg_check_mod),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_anc_switch,payload.msg_anc_switch),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_vehicle_state,payload.msg_vehicle_state),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_tran_func_flag,payload.msg_tran_func_flag),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_tran_func_state,payload.msg_tran_func_state),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_filter_ranges,payload.msg_filter_ranges),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_system_ranges,payload.msg_system_ranges),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_order_flag,payload.msg_order_flag),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_order2_params,payload.msg_order2_params),  14) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_order4_params,payload.msg_order4_params),  15) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_order6_params,payload.msg_order6_params),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_alpha_params,payload.msg_alpha_params),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_freq_division,payload.msg_freq_division),  18) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg_thresholds,payload.msg_thresholds),  19)
#define MsgRequestResponse_CALLBACK NULL
#define MsgRequestResponse_DEFAULT NULL
#define MsgRequestResponse_payload_msg_channel_number_MSGTYPE MSG_ChannelNumber
#define MsgRequestResponse_payload_msg_channel_amplitude_MSGTYPE MSG_ChannelAmplitude
#define MsgRequestResponse_payload_msg_channel_switch_MSGTYPE MSG_ChannelSwitch
#define MsgRequestResponse_payload_msg_check_mod_MSGTYPE MSG_CheckMod
#define MsgRequestResponse_payload_msg_anc_switch_MSGTYPE MSG_AncSwitch
#define MsgRequestResponse_payload_msg_vehicle_state_MSGTYPE MSG_VehicleState
#define MsgRequestResponse_payload_msg_tran_func_flag_MSGTYPE MSG_TranFuncFlag
#define MsgRequestResponse_payload_msg_tran_func_state_MSGTYPE MSG_TranFuncState
#define MsgRequestResponse_payload_msg_filter_ranges_MSGTYPE MSG_FilterRanges
#define MsgRequestResponse_payload_msg_system_ranges_MSGTYPE MSG_SystemRanges
#define MsgRequestResponse_payload_msg_order_flag_MSGTYPE MSG_OrderFlag
#define MsgRequestResponse_payload_msg_order2_params_MSGTYPE MSG_Order2Params
#define MsgRequestResponse_payload_msg_order4_params_MSGTYPE MSG_Order4Params
#define MsgRequestResponse_payload_msg_order6_params_MSGTYPE MSG_Order6Params
#define MsgRequestResponse_payload_msg_alpha_params_MSGTYPE MSG_AlphaParams
#define MsgRequestResponse_payload_msg_freq_division_MSGTYPE MSG_FreqDivision
#define MsgRequestResponse_payload_msg_thresholds_MSGTYPE MSG_Thresholds

extern const pb_msgdesc_t MSG_ChannelNumber_msg;
extern const pb_msgdesc_t MSG_ChannelAmplitude_msg;
extern const pb_msgdesc_t MSG_ChannelSwitch_msg;
extern const pb_msgdesc_t MSG_CheckMod_msg;
extern const pb_msgdesc_t MSG_AncSwitch_msg;
extern const pb_msgdesc_t MSG_VehicleState_msg;
extern const pb_msgdesc_t MSG_TranFuncFlag_msg;
extern const pb_msgdesc_t MSG_TranFuncState_msg;
extern const pb_msgdesc_t MSG_FilterRanges_msg;
extern const pb_msgdesc_t MSG_SystemRanges_msg;
extern const pb_msgdesc_t MSG_OrderFlag_msg;
extern const pb_msgdesc_t MSG_Order2Params_msg;
extern const pb_msgdesc_t MSG_Order4Params_msg;
extern const pb_msgdesc_t MSG_Order6Params_msg;
extern const pb_msgdesc_t MSG_AlphaParams_msg;
extern const pb_msgdesc_t MSG_FreqDivision_msg;
extern const pb_msgdesc_t MSG_Thresholds_msg;
extern const pb_msgdesc_t MsgRequestResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MSG_ChannelNumber_fields &MSG_ChannelNumber_msg
#define MSG_ChannelAmplitude_fields &MSG_ChannelAmplitude_msg
#define MSG_ChannelSwitch_fields &MSG_ChannelSwitch_msg
#define MSG_CheckMod_fields &MSG_CheckMod_msg
#define MSG_AncSwitch_fields &MSG_AncSwitch_msg
#define MSG_VehicleState_fields &MSG_VehicleState_msg
#define MSG_TranFuncFlag_fields &MSG_TranFuncFlag_msg
#define MSG_TranFuncState_fields &MSG_TranFuncState_msg
#define MSG_FilterRanges_fields &MSG_FilterRanges_msg
#define MSG_SystemRanges_fields &MSG_SystemRanges_msg
#define MSG_OrderFlag_fields &MSG_OrderFlag_msg
#define MSG_Order2Params_fields &MSG_Order2Params_msg
#define MSG_Order4Params_fields &MSG_Order4Params_msg
#define MSG_Order6Params_fields &MSG_Order6Params_msg
#define MSG_AlphaParams_fields &MSG_AlphaParams_msg
#define MSG_FreqDivision_fields &MSG_FreqDivision_msg
#define MSG_Thresholds_fields &MSG_Thresholds_msg
#define MsgRequestResponse_fields &MsgRequestResponse_msg

/* Maximum encoded size of messages (where known) */
#define ERNC_PRARAM_PB_H_MAX_SIZE                MsgRequestResponse_size
#define MSG_AlphaParams_size                     60
#define MSG_AncSwitch_size                       6
#define MSG_ChannelAmplitude_size                84
#define MSG_ChannelNumber_size                   18
#define MSG_ChannelSwitch_size                   168
#define MSG_CheckMod_size                        6
#define MSG_FilterRanges_size                    120
#define MSG_FreqDivision_size                    30
#define MSG_Order2Params_size                    300
#define MSG_Order4Params_size                    300
#define MSG_Order6Params_size                    300
#define MSG_OrderFlag_size                       6
#define MSG_SystemRanges_size                    216
#define MSG_Thresholds_size                      18
#define MSG_TranFuncFlag_size                    2
#define MSG_TranFuncState_size                   6
#define MSG_VehicleState_size                    132
#define MsgRequestResponse_size                  309

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
